'use strict';

(function () {
    'use strict';

    angular.module('app.content').controller('ContentController', ContentController);

    ContentController.inject = [];
    function ContentController() {
        // var vm = this;
        activate();

        // Do something

        function activate() {}
    }
})();

(function () {
    'use strict';

    angular.module('app.main').controller('MainController', MainController);

    MainController.inject = ['MainService', '$log'];
    function MainController(MainService, $log) {
        var vm = this;
        activate();

        vm.calendar;

        vm.getDate = function (date) {
            if (Number.isInteger(date)) {
                return new Date(date * 1000);
            }
            return new Date(date);
        };

        vm.removeTags = function (string) {
            return string.replace(/<([^>]*script|a+?)([^>]*?)>(.*?)<\/\1>/g, '').replace(/<(?:.|\n)*?>/g, '').replace(/&(nbsp|amp|quot|lt|gt);/g, '');
        };

        function activate() {
            vm.calendar = [];
            MainService.getCalendar().then(function sucessCallback(data) {
                vm.calendar = angular.copy(data.data);
                for (var i = 0; i < vm.calendar.length; i++) {
                    var event = vm.calendar[i];
                    event.description = vm.removeTags(event.description);
                }
            }, function errorCallback(error) {
                $log.error(error);
            });
        }
    }
})();

(function () {
    'use strict';

    angular.module('app.main').controller('NavbarController', NavbarController);

    NavbarController.$inject = ['$log', 'CourseService', '$window', '$rootScope'];

    function NavbarController($log, CourseService, $window, $rootScope) {

        var vm = this;
        activate();

        vm.courses;

        // vm.showCourse = function(){
        //     $rootScope.selectedCourse = vm.selectedCourse;
        //     $window.location.href = '#/course';
        // }

        vm.removeTags = function (string) {
            return string.replace(/<([^>]*script|a+?)([^>]*?)>(.*?)<\/\1>/g, '').replace(/<(?:.|\n)*?>/g, '').replace(/&(nbsp|amp|quot|lt|gt);/g, '');
        };

        vm.updateContent = function () {
            $('.fontsize').selectpicker('refresh');
        };

        function activate() {
            vm.courses = [];
            CourseService.get().then(function sucessCallback(data) {
                vm.courses = angular.copy(data.data);
                for (var i = 0; i < vm.courses.length; i++) {
                    var course = vm.courses[i];
                    course.summary = vm.removeTags(course.summary);
                }
                $('.fontsize').selectpicker('refresh');
            }, function errorCallback(error) {
                $log.error(error);
            });
        }
    }
})();
(function () {
    'use strict';

    angular.module('app.registration').controller('RegistrationController', RegistrationController);

    RegistrationController.inject = ['RegisterService'];
    function RegistrationController(RegisterService) {
        var vm = this;
        activate();

        // Do something
        vm.selected = {};

        function activate() {
            vm.selected = {};
        }

        vm.register = function () {
            RegisterService.post(vm.selected).then(function sucessCallback(data) {
                console.log(data);
            }, function errorCallback(error) {
                console.log(error);
            });
        };
    }
})();

(function () {
    'use strict';

    angular.module('app.services').controller('ServicesController', ServicesController);

    ServicesController.inject = [];
    function ServicesController() {
        // var vm = this;
        activate();

        // Do something

        function activate() {}
    }
})();